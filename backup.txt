______________________
Program

using System;
using AcessoBancoDeDados.FileManipulation;
using AcessoBancoDeDados.Interfaces;

namespace AcessoBancoDeDados
{
    public class Program
    {
        public static void Main()
        {
            InterfaceDeAcesso Acesso = new();
            Acesso.AppInit();
            //UserGetData.userEntity();
        }
        
    }
}

_______________________

User Entity

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AcessoBancoDeDados.Models
{
    public class UserEntity {
        public string Id { get; set; }
        public string Name { get; set; }
        public string Email { get; set; }
        public string Password { get; set; }
        public string Course { get; set; }
        public string Ocupation { get; set; }
        public UserEntity() {

        }
        public UserEntity(string id, string name, string email, string password, string course, string ocupacao)
        {
            Id = id;
            Name = name;
            Email = email;
            Password = password;
            Course = course;
            Ocupation = ocupacao;
        }
    }
}



_________________________________________

Interface de Acesso


using AcessoBancoDeDados.FileManipulation;
using AcessoBancoDeDados.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data.SqlClient;

namespace AcessoBancoDeDados.Interfaces
{
    public class InterfaceDeAcesso : IAcesso
    {
        private readonly string stringConexao = "Server=labsoft.pcs.usp.br; Initial Catalog=db_11; User id=usuario_11; pwd=48457508806;";

        // dá início à aplicação
        public void AppInit() {
            string action = "";

            while (action != "b")
            {
                Console.WriteLine("Bem Vindo ao Banco de Dados!\n Selecione a ação:");
                Console.WriteLine("[a] Acessar");
                Console.WriteLine("[b] Sair");
                action = Console.ReadLine();
                if (action == "a")
                    Acess();
            }
        }
        // oferece porta de acesso para o usuário
        public void Acess() {
            string user_email, user_senha;

            Console.WriteLine("Informe Suas Credenciais.");
            Console.WriteLine("Usuário: ");
            user_email = Console.ReadLine();
            Console.WriteLine("Senha: ");
            user_senha = Console.ReadLine();

            // em caso de autenticação bem sucedida
            if (Autentication(user_email, user_senha))
            {
                Console.WriteLine("Autenticação Bem sucedida!");
                UserEntity user = new UserEntity();
                LogRegister(user);
                Console.WriteLine("O que desejas fazer?");
                Console.WriteLine("[a] Deslogar");
                Console.WriteLine("[b] Voltar");
                string action = Console.ReadLine();
                if (action == "a")
                    Console.WriteLine("Deslogando...\nPronto");
                else if (action == "b")
                    Console.WriteLine("Voltando ao Menu Inicial");
            }
            // em caso de autenticação mal sucedida
            else
            {
                Console.WriteLine("Falha na Auntenticação.\nPor favor, verifique seu e-mail e sua senha");
                Console.WriteLine("Desejas Continuar?");
                Console.WriteLine("[a] Continuar\n[b] Voltar");
                string action = Console.ReadLine();
                if (action == "a")
                    Acess();
            }

        }
        public bool Autentication(string user_email, string user_password) {
            bool registrado = false;

            using (SqlConnection con = new SqlConnection(stringConexao))
            {
                string querySelect = "SELECT * FROM UsersLoginInfo";
                con.Open();

                SqlDataReader rdr;

                using (SqlCommand cmd = new SqlCommand(querySelect, con))
                {
                    rdr = cmd.ExecuteReader();

                    while (rdr.Read())
                    {
                        string user_emails = rdr[0].ToString();
                        string user_passwords = rdr[1].ToString();
                        Console.WriteLine(user_emails);
                        Console.WriteLine(user_passwords);
                    }
                }
            }


            string[] user_data_base = FileManipulator.ReadAll(FileManipulator.path).Split('\n');
            foreach (var user_data in user_data_base)
            {
                // dados informados pelo usuário
                string data_user_email, data_user_password;
                // dados do sistema
                data_user_email = user_data.Split(';')[0];
                data_user_password = user_data.Split(';')[1];
                if(data_user_email == user_email && data_user_password == user_password)
                {
                    return true;
                }
            }
            return registrado;
        }

        public void LogRegister(UserEntity user) {

        }
    }
}


_______________________________________________________


IAcesso

using AcessoBancoDeDados.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AcessoBancoDeDados.Interfaces
{
    public interface IAcesso
    {
        void AppInit();
        void Acess();
        bool Autentication(string user_email, string user_senha);
        void LogRegister(UserEntity user);

    }
}


_________________________________________________

FILE MANIPULATOR

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AcessoBancoDeDados.FileManipulation {
    public class FileManipulator {
        public static string path = @"C:\Users\cteds_11\source\repos\AcessoBancoDeDados\AcessoBancoDeDados\database\UsersLoginData.txt";
        public static void WriteIn(string path, string content)
        {
            if (!(Directory.Exists(path)))
            {
                //Directory.CreateDirectory(path);
            }
            using (StreamWriter writer = new StreamWriter(path)) {
                writer.WriteLine(content);
            }
        }
        public static string ReadAll(string path)
        {
            using (StreamReader reader = new StreamReader(path))
            {
                return reader.ReadToEnd();
            }
        }
    }
}
